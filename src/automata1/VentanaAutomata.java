/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package automata1;

import Excepciones.*;
import java.awt.Component;
import java.awt.Container;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author user
 */
public class VentanaAutomata extends javax.swing.JFrame {

    /**
     * Creates new form VentanaAutomata
     */
    public VentanaAutomata() {
        initComponents();
        this.setLocationRelativeTo(null);
        cambiaHabilitar(Alfabeto,false);
        cambiaHabilitar(Estados,false);
        cambiaHabilitar(Transiciones,false);
        cambiaHabilitar(Validar,false);
        cambiaHabilitar(Modificacion,false);
        cambiaHabilitar(MostrarAuto,false);
        cambiaHabilitar(MostrarAuto1,false);
        cambiaHabilitar(Equivalencia,false);
        Origen.removeAllItems();
        Transi.removeAllItems();
        Destino.removeAllItems();
        CampoMod.removeAllItems();
        Origen.addItem("");
        Transi.addItem("");
        Destino.addItem("");
        CampoMod.addItem("");
        CampoMod.addItem("Alfabeto");
        CampoMod.addItem("Estados");
        CampoMod.addItem("Transiciones");
        CrearAuto.grabFocus();
    }

    Automata auto1, auto2;
    Estado_q estado;
    Boolean In = false, Fi = false;
    Transiçao transi = new Transiçao();
    short conta = 0, contc = 0;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CrearAuto = new javax.swing.JButton();
        Estados = new javax.swing.JPanel();
        CrearEstado = new javax.swing.JButton();
        Estado = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Inicial = new javax.swing.JCheckBox();
        Final = new javax.swing.JCheckBox();
        FinEstados = new javax.swing.JButton();
        Alfabeto = new javax.swing.JPanel();
        AgregarCaracter = new javax.swing.JButton();
        Caracter = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        FinCaracter = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Automata = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        Automata1 = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        Transiciones = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        AgregaTrans = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Origen = new javax.swing.JComboBox();
        Destino = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        FinTransiciones = new javax.swing.JButton();
        Transi = new javax.swing.JComboBox();
        Validar = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        CadenaVal = new javax.swing.JTextField();
        Validaçao = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        AutoCheck1 = new javax.swing.JCheckBox();
        AutoCheck2 = new javax.swing.JCheckBox();
        Equivalencia = new javax.swing.JButton();
        MostrarAuto = new javax.swing.JPanel();
        ShowEst = new javax.swing.JButton();
        ShowAlfa = new javax.swing.JButton();
        MostrarAuto1 = new javax.swing.JPanel();
        ShowAlfa1 = new javax.swing.JButton();
        ShowEst1 = new javax.swing.JButton();
        Modificacion = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        CampoMod = new javax.swing.JComboBox<>();
        Modificar = new javax.swing.JButton();
        AutoMod2 = new javax.swing.JCheckBox();
        AutoMod1 = new javax.swing.JCheckBox();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ventana");
        setName("Ventana1"); // NOI18N

        CrearAuto.setText("Crear Autómata");
        CrearAuto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearAutoActionPerformed(evt);
            }
        });

        CrearEstado.setText("Crear");
        CrearEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearEstadoActionPerformed(evt);
            }
        });

        jLabel1.setText("Estado:");

        jLabel4.setText("Nombre:");

        Inicial.setText("Estado Inicial");
        Inicial.setName(""); // NOI18N
        Inicial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InicialActionPerformed(evt);
            }
        });

        Final.setText("Estado Final");
        Final.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinalActionPerformed(evt);
            }
        });

        FinEstados.setText("Fin");
        FinEstados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinEstadosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout EstadosLayout = new javax.swing.GroupLayout(Estados);
        Estados.setLayout(EstadosLayout);
        EstadosLayout.setHorizontalGroup(
            EstadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EstadosLayout.createSequentialGroup()
                .addGroup(EstadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EstadosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(EstadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Estado, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(EstadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Final)
                            .addComponent(Inicial)))
                    .addGroup(EstadosLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(CrearEstado)
                        .addGap(18, 18, 18)
                        .addComponent(FinEstados)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        EstadosLayout.setVerticalGroup(
            EstadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EstadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(EstadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EstadosLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4))
                    .addComponent(Inicial, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(EstadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Estado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Final))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(EstadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CrearEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FinEstados))
                .addContainerGap())
        );

        AgregarCaracter.setText("Ingresar");
        AgregarCaracter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarCaracterActionPerformed(evt);
            }
        });

        Caracter.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                CaracterFocusGained(evt);
            }
        });
        Caracter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CaracterKeyPressed(evt);
            }
        });

        jLabel2.setText("Alfabeto");

        jLabel3.setText("Caracter: ");

        FinCaracter.setText("Fin");
        FinCaracter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinCaracterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AlfabetoLayout = new javax.swing.GroupLayout(Alfabeto);
        Alfabeto.setLayout(AlfabetoLayout);
        AlfabetoLayout.setHorizontalGroup(
            AlfabetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AlfabetoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AlfabetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AlfabetoLayout.createSequentialGroup()
                        .addComponent(AgregarCaracter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FinCaracter))
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(Caracter, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        AlfabetoLayout.setVerticalGroup(
            AlfabetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AlfabetoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Caracter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AlfabetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AgregarCaracter)
                    .addComponent(FinCaracter))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        Automata.setColumns(20);
        Automata.setRows(5);
        jScrollPane1.setViewportView(Automata);

        Automata1.setColumns(20);
        Automata1.setRows(5);
        jScrollPane2.setViewportView(Automata1);

        jLabel8.setText("Autómata 1");

        jLabel9.setText("Autómata 2");

        jLabel7.setText("Estado Destino:");

        AgregaTrans.setText("Agregar");
        AgregaTrans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregaTransActionPerformed(evt);
            }
        });

        jLabel5.setText("Transiciones:");

        jLabel6.setText("Caracter:");

        Origen.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        Origen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OrigenMouseClicked(evt);
            }
        });
        Origen.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                OrigenItemStateChanged(evt);
            }
        });

        Destino.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel10.setText("Estado Origen:");

        FinTransiciones.setText("Fin");
        FinTransiciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinTransicionesActionPerformed(evt);
            }
        });

        Transi.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout TransicionesLayout = new javax.swing.GroupLayout(Transiciones);
        Transiciones.setLayout(TransicionesLayout);
        TransicionesLayout.setHorizontalGroup(
            TransicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TransicionesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TransicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TransicionesLayout.createSequentialGroup()
                        .addGroup(TransicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(TransicionesLayout.createSequentialGroup()
                                .addComponent(Origen, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Transi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(TransicionesLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(TransicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(Destino, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(TransicionesLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(2, 2, 2)
                        .addComponent(jLabel5)
                        .addGap(0, 108, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(TransicionesLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(AgregaTrans)
                .addGap(18, 18, 18)
                .addComponent(FinTransiciones)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        TransicionesLayout.setVerticalGroup(
            TransicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TransicionesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TransicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(TransicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TransicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Origen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Destino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Transi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(TransicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AgregaTrans)
                    .addComponent(FinTransiciones))
                .addContainerGap())
        );

        jLabel11.setText("Validación de Cadenas:");

        jLabel12.setText("Cadena a validar:");

        Validaçao.setText("Validar");
        Validaçao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValidaçaoActionPerformed(evt);
            }
        });

        jLabel13.setText("Automata a utilizar:");

        AutoCheck1.setText("Automata1");

        AutoCheck2.setText("Automata 2");

        javax.swing.GroupLayout ValidarLayout = new javax.swing.GroupLayout(Validar);
        Validar.setLayout(ValidarLayout);
        ValidarLayout.setHorizontalGroup(
            ValidarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ValidarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ValidarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel11))
                .addGap(33, 33, 33))
            .addGroup(ValidarLayout.createSequentialGroup()
                .addGroup(ValidarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ValidarLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel12))
                    .addGroup(ValidarLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(ValidarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ValidarLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(Validaçao))
                            .addComponent(CadenaVal, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ValidarLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(AutoCheck1)
                        .addGap(18, 18, 18)
                        .addComponent(AutoCheck2)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        ValidarLayout.setVerticalGroup(
            ValidarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ValidarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(ValidarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AutoCheck1)
                    .addComponent(AutoCheck2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CadenaVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Validaçao)
                .addContainerGap())
        );

        Equivalencia.setText("Equivalencias");
        Equivalencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EquivalenciaActionPerformed(evt);
            }
        });

        ShowEst.setText("Mostrar Estados");
        ShowEst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowEstActionPerformed(evt);
            }
        });

        ShowAlfa.setText("Mostrar Alfabeto");
        ShowAlfa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowAlfaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MostrarAutoLayout = new javax.swing.GroupLayout(MostrarAuto);
        MostrarAuto.setLayout(MostrarAutoLayout);
        MostrarAutoLayout.setHorizontalGroup(
            MostrarAutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MostrarAutoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ShowAlfa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(ShowEst)
                .addContainerGap())
        );
        MostrarAutoLayout.setVerticalGroup(
            MostrarAutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MostrarAutoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MostrarAutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ShowEst)
                    .addComponent(ShowAlfa))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ShowAlfa1.setText("Mostrar Alfabeto");
        ShowAlfa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowAlfa1ActionPerformed(evt);
            }
        });

        ShowEst1.setText("Mostrar Estados");
        ShowEst1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowEst1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MostrarAuto1Layout = new javax.swing.GroupLayout(MostrarAuto1);
        MostrarAuto1.setLayout(MostrarAuto1Layout);
        MostrarAuto1Layout.setHorizontalGroup(
            MostrarAuto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MostrarAuto1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ShowAlfa1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(ShowEst1)
                .addContainerGap())
        );
        MostrarAuto1Layout.setVerticalGroup(
            MostrarAuto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MostrarAuto1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MostrarAuto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ShowAlfa1)
                    .addComponent(ShowEst1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel14.setText("Modificar Información");

        jLabel15.setText("Campo a modificar:");

        CampoMod.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        Modificar.setText("Modificar");
        Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarActionPerformed(evt);
            }
        });

        AutoMod2.setText("Automata 2");

        AutoMod1.setText("Automata1");

        jLabel16.setText("Automata a utilizar:");

        javax.swing.GroupLayout ModificacionLayout = new javax.swing.GroupLayout(Modificacion);
        Modificacion.setLayout(ModificacionLayout);
        ModificacionLayout.setHorizontalGroup(
            ModificacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ModificacionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ModificacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ModificacionLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CampoMod, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ModificacionLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Modificar))
                    .addGroup(ModificacionLayout.createSequentialGroup()
                        .addGroup(ModificacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addGroup(ModificacionLayout.createSequentialGroup()
                                .addComponent(AutoMod1)
                                .addGap(18, 18, 18)
                                .addComponent(AutoMod2)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ModificacionLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel16)
                .addGap(51, 51, 51))
        );
        ModificacionLayout.setVerticalGroup(
            ModificacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ModificacionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(ModificacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AutoMod1)
                    .addComponent(AutoMod2))
                .addGap(18, 18, 18)
                .addGroup(ModificacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(CampoMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Modificar)
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(137, 137, 137)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(MostrarAuto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(65, 65, 65)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(MostrarAuto1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(131, 131, 131)
                                .addComponent(jLabel9))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(CrearAuto)
                        .addGap(18, 18, 18)
                        .addComponent(Alfabeto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Estados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Transiciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(331, 331, 331)
                        .addComponent(Equivalencia)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Validar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Modificacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Estados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Alfabeto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Transiciones, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(CrearAuto)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MostrarAuto1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MostrarAuto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Equivalencia))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Modificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Validar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CrearAutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearAutoActionPerformed
        // TODO add your handling code here:
        if(conta == 0){
            auto1 = new Automata();
        }
        if(conta == 1){
            auto2 = new Automata();
        }
        JOptionPane.showMessageDialog(Transi, "Autómata creado con éxito", null, JOptionPane.INFORMATION_MESSAGE);
        cambiaHabilitar(Alfabeto,true);
        CrearAuto.setEnabled(false);
        Caracter.grabFocus();
           //Automata auto1=new Automata();
           /*auto1 = new Automata();
           Alfabeto alfa = new Alfabeto();
           auto1.setAlfabeto(alfa);
           try{
           auto1.agregaCar('a');
           auto1.agregaCar('b');
           
           Estados_K estados=new Estados_K();
           Estado_q q0=new Estado_q("q0",true,false );
           Estado_q q1=new Estado_q("q1",false,false );
           Estado_q q2=new Estado_q("q2",false,true );
           estados.AgregarEst(q0);
           estados.AgregarEst(q1);
           estados.AgregarEst(q2);
           auto1.setEstados(estados);
           auto1.iniciaVec();
           Transiçao tra1 = new Transiçao(auto1.getEstado("q0"),auto1.getCaracter('a'));
           Transiçao tra2 = new Transiçao(auto1.getEstado("q1"),auto1.getCaracter('b'));
           Transiçao trb1 = new Transiçao(auto1.getEstado("q0"),auto1.getCaracter('a'));
           Transiçao trb2 = new Transiçao(auto1.getEstado("q2"),auto1.getCaracter('b'));
           Transiçao trc1 = new Transiçao(auto1.getEstado("q2"),auto1.getCaracter('a'));
           Transiçao trc2 = new Transiçao(auto1.getEstado("q2"),auto1.getCaracter('b'));
           
           auto1.getEstado("q0").ingresarTrans(tra1, auto1.posiCar('a'));
           auto1.getEstado("q0").ingresarTrans(tra2, auto1.posiCar('b'));
           auto1.getEstado("q1").ingresarTrans(trb1, auto1.posiCar('a'));
           auto1.getEstado("q1").ingresarTrans(trb2, auto1.posiCar('b'));
           auto1.getEstado("q2").ingresarTrans(trc1, auto1.posiCar('a'));
           auto1.getEstado("q2").ingresarTrans(trc2, auto1.posiCar('b'));
           System.out.println("Automata 1: \n" + auto1.mostrarEstados() + "\n" + auto1.mostrarTransiciones());
           
           auto2 = new Automata();
           auto2.agregaCar('a');
           auto2.agregaCar('b');
           Estado_q Q0 = new Estado_q("Q0", true, true);
           Estado_q Q1 = new Estado_q("Q1", false, false);
           Estado_q Q2 = new Estado_q("Q2", false, true);
           auto2.agregaEst(Q0);
           auto2.agregaEst(Q1);
           auto2.agregaEst(Q2);
           auto2.iniciaVec();
           
           Transiçao trq00 = new Transiçao(auto2.getEstado("Q0"),auto2.getCaracter('a'));
           Transiçao trq01 = new Transiçao(auto2.getEstado("Q1"),auto2.getCaracter('b'));
           Transiçao trq10 = new Transiçao(auto2.getEstado("Q0"),auto2.getCaracter('a'));
           Transiçao trq11 = new Transiçao(auto2.getEstado("Q2"),auto2.getCaracter('b'));
           Transiçao trq20 = new Transiçao(auto2.getEstado("Q2"),auto2.getCaracter('a'));
           Transiçao trq21 = new Transiçao(auto2.getEstado("Q2"),auto2.getCaracter('b'));
           auto2.getEstado("Q0").ingresarTrans(trq00, auto2.posiCar('a'));
           auto2.getEstado("Q0").ingresarTrans(trq01, auto2.posiCar('b'));
           auto2.getEstado("Q1").ingresarTrans(trq10, auto2.posiCar('a'));
           auto2.getEstado("Q1").ingresarTrans(trq11, auto2.posiCar('b'));
           auto2.getEstado("Q2").ingresarTrans(trq20, auto2.posiCar('a'));
           auto2.getEstado("Q2").ingresarTrans(trq21, auto2.posiCar('b'));
           System.out.println("\n\nAutomata 2: \n" + auto2.mostrarEstados() + "\n" + auto2.mostrarTransiciones());
            } catch (ExcepcionCaracterYaExiste | ExcepcionEstadoYaExiste | ExcepcionEstadoNoExiste | ExcepcionCaracterNoExiste ex) {
            JOptionPane.showMessageDialog(Transi, ex.getMessage(), null, JOptionPane.ERROR_MESSAGE);
            }*/
           
        
    }//GEN-LAST:event_CrearAutoActionPerformed

    private void CrearEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearEstadoActionPerformed
        // TODO add your handling code here:
        try {
            estado = new Estado_q(Estado.getText(),In, Fi);
           
            if(conta == 0){
                auto1.agregaEst(estado);
                Origen.addItem(Estado.getText());
                Origen.repaint();
                Destino.addItem(Estado.getText());
                Destino.repaint();
                JOptionPane.showMessageDialog(null, estado.toString(), null, JOptionPane.INFORMATION_MESSAGE);
            }
            else if(conta == 1){
                auto2.agregaEst(estado);
                Origen.addItem(Estado.getText());
                Origen.repaint();
                Destino.addItem(Estado.getText());
                Destino.repaint();
                JOptionPane.showMessageDialog(null, estado.toString(), null, JOptionPane.INFORMATION_MESSAGE);
            }
            Estado.setText("");
            Estado.grabFocus();
        } catch (ExcepcionEstadoYaExiste ex) {
            JOptionPane.showMessageDialog(Transi, ex.getMessage(), null, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_CrearEstadoActionPerformed

    private void AgregarCaracterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarCaracterActionPerformed
        // TODO add your handling code here:
        try {
            if(Caracter.getText().length()==1){
                if(conta == 0){
                    auto1.agregaCar(Caracter.getText().charAt(0));
                    Transi.addItem(Caracter.getText());
                    Transi.repaint();
                }
                else if(conta == 1){
                    auto2.agregaCar(Caracter.getText().charAt(0));
                    Transi.addItem(Caracter.getText());
                    Transi.repaint();
                }
                JOptionPane.showMessageDialog(Transi, "El caracter ha sido ingresado con éxito", null, JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(Transi, "Para el alfabeto es necesario ingresar\nsolamente caracteres como elementos", null, JOptionPane.ERROR_MESSAGE);
            }
            Caracter.setText("");
            Caracter.grabFocus();
        } catch (ExcepcionCaracterYaExiste ex) {
            JOptionPane.showMessageDialog(Transi, ex.getMessage(), null, JOptionPane.ERROR_MESSAGE);
            Caracter.setText("");
            Caracter.grabFocus();
        }
    }//GEN-LAST:event_AgregarCaracterActionPerformed

    private void ShowAlfaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowAlfaActionPerformed
        // TODO add your handling code here:
        Automata.setText(auto1.mostrarAlfabeto());
    }//GEN-LAST:event_ShowAlfaActionPerformed

    private void CaracterKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CaracterKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
            AgregarCaracterActionPerformed(null);
    }//GEN-LAST:event_CaracterKeyPressed

    private void CaracterFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CaracterFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_CaracterFocusGained

    private void ShowAlfa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowAlfa1ActionPerformed
        // TODO add your handling code here:
        Automata1.setText(auto2.mostrarAlfabeto());
    }//GEN-LAST:event_ShowAlfa1ActionPerformed

    private void InicialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InicialActionPerformed
        // TODO add your handling code here:
        if(Inicial.isSelected())
            In = true;
        else
            In = false;
    }//GEN-LAST:event_InicialActionPerformed

    private void FinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinalActionPerformed
        // TODO add your handling code here:
        if(Final.isSelected())
            Fi = true;
        else
            Fi = false;
    }//GEN-LAST:event_FinalActionPerformed

    private void AgregaTransActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregaTransActionPerformed
        try {
            String origen = Origen.getSelectedItem().toString(); 
            String transi = Transi.getSelectedItem().toString();
            String destino = Destino.getSelectedItem().toString();
            char letra = transi.charAt(0);
            Estado_q estado2;
            Caracter trans;
            if(conta == 0){
                estado2 = auto1.getEstado(destino); 
                trans = auto1.getCaracter(letra);
                if(auto1.buscarTrans(auto1.getEstado(origen), auto1.posiCar(letra))==null){
                    Transiçao nuevo = new Transiçao(estado2, trans);
                    auto1.llenarTransis(auto1.getEstado(origen), auto1.posiCar(letra), nuevo);
                    Automata.setText(auto1.mostrarTransiciones());
                    System.out.println(nuevo);
                    JOptionPane.showMessageDialog(null, "Transicion ingresada exitosamente");
                }
                else{
                    JOptionPane.showMessageDialog(null, "El estado seleccionado ya tiene una transicion con el caracter indicado.\nIngrese otro caracter u otro estado");
                }
            }
            else if (conta == 1){
                estado2 = auto2.getEstado(destino); 
                trans = auto2.getCaracter(letra);
                if(auto2.buscarTrans(auto2.getEstado(origen), auto2.posiCar(letra))==null){
                    Transiçao nuevo = new Transiçao(estado2, trans);
                    auto2.llenarTransis(auto2.getEstado(origen), auto2.posiCar(letra), nuevo);
                    Automata1.setText(auto2.mostrarTransiciones());
                    System.out.println(nuevo);
                    JOptionPane.showMessageDialog(null, "Transicion ingresada exitosamente");
                }
                else{
                    JOptionPane.showMessageDialog(null, "El estado seleccionado ya tiene una transicion con el caracter indicado.\nIngrese otro caracter u otro estado");
                }
            }
        } catch (ExcepcionEstadoNoExiste | ExcepcionCaracterNoExiste ex) {
            Logger.getLogger(VentanaPrueba.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_AgregaTransActionPerformed

    private void FinCaracterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinCaracterActionPerformed
        // TODO add your handling code here:
        Caracter.setText("");
        cambiaHabilitar(Estados,true);
        cambiaHabilitar(Alfabeto,false);
        if(conta == 0)
            ShowAlfa.setVisible(true);
        else if(conta == 1)
            ShowAlfa1.setVisible(true);
        Estado.grabFocus();
    }//GEN-LAST:event_FinCaracterActionPerformed

    private void FinEstadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinEstadosActionPerformed
        // TODO add your handling code here:
        Estado.setText("");
        cambiaHabilitar(Transiciones,true);
        cambiaHabilitar(Estados,false);
        if(conta == 0){
            auto1.iniciaVec();
            ShowEst.setVisible(true);
        }
        else if(conta == 1){
            auto2.iniciaVec();
            ShowEst1.setVisible(true);
        }
    }//GEN-LAST:event_FinEstadosActionPerformed

    private void OrigenItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_OrigenItemStateChanged
        
    }//GEN-LAST:event_OrigenItemStateChanged

    private void OrigenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrigenMouseClicked
        
    }//GEN-LAST:event_OrigenMouseClicked

    private void FinTransicionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinTransicionesActionPerformed
        // TODO add your handling code here:
        if(auto1.verificarTransiçaos()==true){
            Origen.removeAllItems();
            Origen.addItem("");
            Origen.repaint();
            Transi.removeAllItems();
            Transi.addItem("");
            Transi.repaint();
            Destino.removeAllItems();
            Destino.addItem("");
            Destino.repaint();
            cambiaHabilitar(CrearAuto,true);
            cambiaHabilitar(Transiciones,false);
            cambiaHabilitar(Validar,true);
            if(conta==0){
                cambiaHabilitar(MostrarAuto,true);
                cambiaHabilitar(AutoCheck2,false);
                cambiaHabilitar(Modificacion,true);
                cambiaHabilitar(AutoMod2,false);
            }
            else if(conta==1){
                cambiaHabilitar(MostrarAuto1,true);
                cambiaHabilitar(Equivalencia,true);
                cambiaHabilitar(AutoCheck2,true);
                cambiaHabilitar(AutoMod2,true);
            }
            conta++;
            JOptionPane.showMessageDialog(null, "Transiciones Completas ;)");
        }
        else{
            JOptionPane.showMessageDialog(null, "Hay alguna transición que no ha sido ingresada.\nPor favor, verifique los datos ingresados");
        }
    }//GEN-LAST:event_FinTransicionesActionPerformed

    private void ShowEstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowEstActionPerformed
        // TODO add your handling code here:
        Automata.setText(auto1.mostrarEstados() + "\n" + auto1.mostrarTransiciones());
    }//GEN-LAST:event_ShowEstActionPerformed

    private void ShowEst1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowEst1ActionPerformed
        // TODO add your handling code here:
        Automata1.setText(auto2.mostrarEstados() + "\n" + auto2.mostrarTransiciones());
    }//GEN-LAST:event_ShowEst1ActionPerformed

    private void ValidaçaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ValidaçaoActionPerformed
        // TODO add your handling code here:
        try {
            String cadena = CadenaVal.getText();
            boolean existe = false;
            Caracter iterador;
            for(short i = 0; i < cadena.length(); i++){
                existe = false;
                if(AutoCheck1.isSelected()){
                    iterador = auto1.getAlfabeto().getInicio().getCarSig();
                    while(iterador != auto1.getAlfabeto().getFin()){
                        if(cadena.charAt(i) == iterador.getCaracter())
                            existe = true;
                        iterador = iterador.getCarSig();
                    }
                }
                else if (AutoCheck2.isSelected()){
                    iterador = auto2.getAlfabeto().getInicio().getCarSig();
                    while(iterador != auto2.getAlfabeto().getFin()){
                        if(cadena.charAt(i) == iterador.getCaracter())
                            existe = true;
                        iterador = iterador.getCarSig();
                    }
                }
                if(existe == false){
                    JOptionPane.showMessageDialog(null, "Algún caracter de la cadena ingresada no pertenece al alfabeto especificado."
                        + "\nPor favor, cambie el dato");
                }
            }
            if(existe == true){
                JOptionPane.showMessageDialog(null, "Todos los caracteres existene en el alfabeto :)");
                Estado_q inicio = auto1.getInicial();
                char primero = ' ';
                Transiçao transicion = new Transiçao();
                for(short i = 0; i < (short)cadena.length(); i++){
                    primero = cadena.charAt(i);
                    if(AutoCheck1.isSelected()){
                        transicion = inicio.getTransiçao(auto1.posiCar(primero));
                    }
                    else if (AutoCheck2.isSelected()){
                        transicion = inicio.getTransiçao(auto2.posiCar(primero));
                    }
                    inicio = transicion.getDestino();
                }
                if(inicio.isFinal()){
                    if(AutoCheck1.isSelected()){
                        System.out.println("Cadena válida para este lenguaje");
                        JOptionPane.showMessageDialog(null, "Cadena válida para este lenguaje", "Autómata 1", JOptionPane.INFORMATION_MESSAGE);
                    }
                    else if (AutoCheck2.isSelected()){
                        System.out.println("Cadena válida para este lenguaje");
                        JOptionPane.showMessageDialog(null, "Cadena válida para este lenguaje", "Autómata 2", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
                else{
                    if(AutoCheck1.isSelected()){
                        System.out.println("Cadena NO válida para este lenguaje");
                        JOptionPane.showMessageDialog(null, "Cadena NO válida para este lenguaje", "Autómata 1", JOptionPane.INFORMATION_MESSAGE);
                    }
                    else if (AutoCheck2.isSelected()){
                        System.out.println("Cadena NO válida para este lenguaje");
                        JOptionPane.showMessageDialog(null, "Cadena NO válida para este lenguaje", "Autómata 2", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            }
            CadenaVal.setText("");
            CadenaVal.grabFocus();
        } catch (ExcepcionCaracterNoExiste | ExcepcionNoHayInicial ex) {
            Logger.getLogger(VentanaAutomata.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ValidaçaoActionPerformed

    private void EquivalenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EquivalenciaActionPerformed
        // TODO add your handling code here:
//        MatrizComparaciones mat = new MatrizComparaciones();
//        mat.crearMatriz((short)11,auto1.getAlfabeto().getTamaño());
//        mat.inicialesMatrix(auto1, auto2);
        ListaComp lista = new ListaComp();
       lista.precomparacion(auto1,auto2);
    }//GEN-LAST:event_EquivalenciaActionPerformed

    private void ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_ModificarActionPerformed

    
    public static void cambiaHabilitar(Container c, boolean cond){
        Component[] componentes = c.getComponents();
        c.setEnabled(cond);
        for(int i = 0; i < componentes.length; i++){
            componentes[i].setEnabled(cond);
            
            if(componentes[i] instanceof Container){
                cambiaHabilitar((Container)componentes[i], cond);
            }
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaAutomata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaAutomata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaAutomata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaAutomata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaAutomata().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AgregaTrans;
    private javax.swing.JButton AgregarCaracter;
    private javax.swing.JPanel Alfabeto;
    private javax.swing.JCheckBox AutoCheck1;
    private javax.swing.JCheckBox AutoCheck2;
    private javax.swing.JCheckBox AutoMod1;
    private javax.swing.JCheckBox AutoMod2;
    private javax.swing.JTextArea Automata;
    private javax.swing.JTextArea Automata1;
    private javax.swing.JTextField CadenaVal;
    private javax.swing.JComboBox<String> CampoMod;
    private javax.swing.JTextField Caracter;
    private javax.swing.JButton CrearAuto;
    private javax.swing.JButton CrearEstado;
    private javax.swing.JComboBox Destino;
    private javax.swing.JButton Equivalencia;
    private javax.swing.JTextField Estado;
    private javax.swing.JPanel Estados;
    private javax.swing.JButton FinCaracter;
    private javax.swing.JButton FinEstados;
    private javax.swing.JButton FinTransiciones;
    private javax.swing.JCheckBox Final;
    private javax.swing.JCheckBox Inicial;
    private javax.swing.JPanel Modificacion;
    private javax.swing.JButton Modificar;
    private javax.swing.JPanel MostrarAuto;
    private javax.swing.JPanel MostrarAuto1;
    private javax.swing.JComboBox Origen;
    private javax.swing.JButton ShowAlfa;
    private javax.swing.JButton ShowAlfa1;
    private javax.swing.JButton ShowEst;
    private javax.swing.JButton ShowEst1;
    private javax.swing.JComboBox Transi;
    private javax.swing.JPanel Transiciones;
    private javax.swing.JPanel Validar;
    private javax.swing.JButton Validaçao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
